{"version":3,"sources":["js/audio-manager.ts","js/coffee-cup.ts","js/publisher.ts","js/abstract-coffee-machine-ui.ts","js/coffee-machine-gui.ts","js/states.ts","js/utils.ts","js/coffee-machine.ts","js/main.ts"],"names":[],"mappings":"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","file":"main.652ce396.js","sourceRoot":"../src","sourcesContent":["// todo найти нормальный способ\ndeclare const require: (path: string) => string;\n\nexport class AudioManager {\n  private sound: HTMLAudioElement | null;\n  private config: any;\n  private readonly clickButtonsSound: HTMLAudioElement;\n  private readonly pouringCoffeeSound: HTMLAudioElement;\n  private readonly fillingContainerSound: HTMLAudioElement;\n  private readonly grindCoffeeBeansSound: HTMLAudioElement;\n  constructor(config) {\n    this.sound = null;\n    // const { volume } = config;\n    this.config = config;\n    const pouringCoffeeSound = require('../assets/sounds/pouring-coffee-sound.mp3');\n    const clickButtonSound = require('../assets/sounds/switch-click-button-sound.mp3');\n    const fillingContainerSound = require('../assets/sounds/fulling-sound.mp3');\n    const grindCoffeeBeansSound = require('../assets/sounds/grinder-sound.mp3');\n    this.clickButtonsSound = new Audio(clickButtonSound);\n    this.pouringCoffeeSound = new Audio(pouringCoffeeSound);\n    this.fillingContainerSound = new Audio(fillingContainerSound);\n    this.grindCoffeeBeansSound = new Audio(grindCoffeeBeansSound);\n  }\n\n  play(sound) {\n    switch (sound) {\n      case 'clickButtonsSound':\n        this.sound = this.clickButtonsSound;\n        break;\n      case 'pouringCoffeeSound':\n        this.sound = this.pouringCoffeeSound;\n        break;\n      case 'fillingContainerSound':\n        this.sound = this.fillingContainerSound;\n        break;\n      case 'grindCoffeeBeansSound':\n        this.sound = this.grindCoffeeBeansSound;\n        break;\n    }\n\n    this.sound.volume = this.config.volume;\n    this.sound.play().finally();\n  }\n\n  stop(sound) {\n    switch (sound) {\n      case 'clickButtonsSound':\n        this.sound = this.clickButtonsSound;\n        break;\n      case 'pouringCoffeeSound':\n        this.sound = this.pouringCoffeeSound;\n    }\n    this.sound.pause();\n  }\n}\n","export class CoffeeCup {\n  isFull: boolean;\n  cupElement: Element;\n  pouredLiquidElement: HTMLElement;\n\n  constructor(options) {\n    this.isFull = false;\n    this.cupElement = options.cupElement;\n    this.pouredLiquidElement = options.pouredLiquidElement;\n  }\n}\n","export class Publisher {\n  protected readonly eventHandlers: { [key: string]: Function[] } = {};\n\n  emit(event: string, data?: unknown) {\n    this.eventHandlers[event].forEach((handler) => handler(data));\n  }\n\n  on(event: string, handler: Function) {\n    if (!this.eventHandlers[event]) {\n      this.eventHandlers[event] = [];\n    }\n\n    this.eventHandlers[event].push(handler);\n  }\n\n  onEvents(eventsMap: { [key: string]: Function }) {\n    for (const event of Reflect.ownKeys(eventsMap)) {\n      this.on(String(event), eventsMap[String(event)]);\n    }\n  }\n}\n","import { Publisher } from './publisher';\nimport { CoffeeMachine } from './coffee-machine';\n\nexport abstract class AbstractCoffeeMachineUI extends Publisher {\n  abstract setupEvents(machine: CoffeeMachine);\n}\n","import { AudioManager } from './audio-manager';\nimport { CoffeeCup } from './coffee-cup';\nimport { AbstractCoffeeMachineUI } from './abstract-coffee-machine-ui';\n\nexport class CoffeeMachineGUI extends AbstractCoffeeMachineUI {\n  private audioManager: AudioManager;\n  private buttonElements: HTMLCollectionOf<Element>;\n  private switchOnButton: Element;\n  private coffeeMachineElement: Element;\n  private ingredientContainers: HTMLCollectionOf<Element>;\n  private buttonElementsNav: Element;\n  private cup: CoffeeCup;\n  // private hinter: Hints;\n  private boundHandlerOnSelectedCoffee: (e: Event) => void;\n\n  constructor({ hints }: { hints?: boolean }) {\n    super();\n    this.audioManager = new AudioManager({ volume: 0.5 });\n    this.buttonElements = document.getElementsByClassName('button');\n    this.switchOnButton = Array.prototype.filter.call(this.buttonElements, (button) =>\n      button.classList.contains('button_is-switch-on'),\n    )[0];\n    this.coffeeMachineElement = document.getElementsByClassName('coffee-machine')[0]\n    this.ingredientContainers = document.getElementsByClassName('container');\n    this.buttonElementsNav = document.getElementsByClassName('coffee-list')[0];\n    this.cup = new CoffeeCup({\n      cupElement: document.getElementsByClassName('coffee-cup-factor')[0],\n      pouredLiquidElement: document.getElementsByClassName('coffee-cup')[0],\n    });\n    // this.hinter = hints ? new Hints(\n    //   [this._switchOnButton, ...this._ingredientContainers, this._cup.cupElement],\n    // ) : null;\n    this.boundHandlerOnSelectedCoffee = this.handlerOnSelectedCoffee.bind(this);\n    this.setupControlsHandlers();\n  }\n\n  setupEvents(machine) {\n    machine.onEvents({\n      'coffeeReady': (ingredientsAvailable) => {\n        this.stopAnimation('busy');\n        this.enableAllButtons();\n        this.audioManager.stop('grindCoffeeBeansSound');\n        this.setupOnMakeCoffeeTypesOnEventClick();\n        console.log('Кофе готов!');\n        this.audioManager.stop('pouringCoffeeSound');\n        this.showIngredientsAvailable(ingredientsAvailable);\n        this.renderIngredientsAvailable(ingredientsAvailable);\n      },\n      'noAnythingIngredient': () => {\n        this.stopAnimation('busy');\n        this.startAnimation('error');\n      },\n      'noMilk': () => {\n        debugger\n        console.log('кажется нет молока');\n        this.showContainerStatus('milk');\n        this.fillContainer('milk');\n      },\n      'noGrains': () => {\n        console.log('нет зерен');\n        this.showContainerStatus('grain');\n        this.fillContainer('grain');\n      },\n      'noWater': () => {\n        console.log('нет воды');\n        this.showContainerStatus('water');\n        this.fillContainer('water');\n      },\n      'replenishmentOfIngredients': (data) => {\n        if (Object.values(data).every(ingredientAmount => ingredientAmount > 10)) {\n          this.stopAnimation('error');\n          this.emit('filledAllContainers')\n        }\n      },\n      'returnCoffeeTypes': (coffeeTypes) => {\n        this.showTypesCoffee(coffeeTypes);\n        this.enableAllButtons();\n        this.setupOnMakeCoffeeTypesOnEventClick();\n      },\n      'whipping': () => {\n        console.log('взбиваю 🌀...');\n      },\n      'pouring': ({ colorCoffee, ms }) => {\n        this.startPouringDrinkAnimation(ms, colorCoffee);\n        this.audioManager.play('pouringCoffeeSound');\n        console.log('наливаю 🥛...');\n      },\n      'cleaning': () => {\n        console.log('очищаю...');\n      },\n      'clear': () => {\n        console.log('очистил 🧹');\n      },\n      'canOff': () => {\n        // ???? //\n        this.setupSwitchOffHandler();\n      },\n      'ready': (coffeeTypes) => {\n        this.showTypesCoffee(coffeeTypes);\n        this.stopAnimation('busy');\n        this.setupOnMakeCoffeeTypesOnEventClick();\n        // ???\n        this.setupSwitchOffHandler();\n        // ???\n        console.log('я готова делать кофе!');\n      },\n      'switchedOn': () => {\n        this.coffeeMachineElement.classList.remove('off')\n      },\n      'switchedOff': () => {\n        this.removeOnMakeCoffeeTypesOnEventClick();\n        this.switchOnButton.setAttribute('aria-checked', 'false');\n        this.coffeeMachineElement.classList.add('off');\n        this.setupControlsHandlers();\n        debugger\n        console.log('\\n\\n\\n\\n\\n\\n\\n\\n');\n      },\n      'checking': (cupIsFull) => {\n        console.log('проверяю...');\n        if (cupIsFull) {\n          this.cup.pouredLiquidElement.classList.remove('pouring-mode');\n        }\n        this.startAnimation('busy');\n      },\n      'brewing': ({ coffeeType }) => {\n        this.audioManager.play('grindCoffeeBeansSound');\n        console.log(`завариваю ${coffeeType.coffeeName}`);\n      },\n      'welcome': (coffeeTypes) => this.greeting(coffeeTypes),\n      'init': (ingredientsAvailable) => {\n        this.renderIngredientsAvailable(ingredientsAvailable);\n        this.showIngredientsAvailable(ingredientsAvailable);\n      }\n    });\n  }\n\n  renderIngredientsAvailable(ingredientsAvailable) {\n    Array.prototype.map.call(document.getElementsByClassName('container'), (container) => {\n      for (const name of Reflect.ownKeys(ingredientsAvailable)) {\n        const ingredient = container.getElementsByClassName(`${String(name)}`)[0];\n        if (ingredient) {\n          ingredient.style.clipPath = `polygon(0 ${100 - ingredientsAvailable[name]}%,\n          100% ${100 - ingredientsAvailable[name]}%, 100% 100%, 0 100%)`;\n        }\n      }\n    });\n  }\n\n  fillContainer(containerName) {\n    Array.prototype.find.call(\n      this.ingredientContainers,\n      (container => container.children[0].dataset.containerName === containerName)\n    )\n    .addEventListener('click', this.boundHandlerOnFullContainer(containerName), { once: true })\n  }\n\n  boundHandlerOnFullContainer(containerName) {\n    return this.handlerOnFullContainer.bind(this, containerName)\n  }\n\n  countAmountOfIngredient() {\n    let amountOf = +prompt('Сколько положить?', '100')\n    if (amountOf > 100 || amountOf === null) {\n      amountOf = 100;\n    }\n\n    return amountOf\n  }\n\n  handlerOnFullContainer(containerName, e) {\n    let amountOf = this.countAmountOfIngredient()\n\n    this.renderInfoContainer(containerName, amountOf)\n    e.currentTarget.removeEventListener('click', this.boundHandlerOnFullContainer(containerName))\n\n    this.showContainerStatus(containerName);\n    this.audioManager.play('fillingContainerSound');\n    this.emit('filledContainer', { containerName, amountOf })\n  }\n\n  renderInfoContainer(containerName: string, amountOf: number) {\n    const container = <HTMLElement>document.getElementsByClassName(containerName)[0]\n    document.getElementsByClassName(`coffee-machine__${containerName}`)[0]\n      .textContent = String(containerName + \": \" + amountOf);\n    container.style\n      .clipPath = `polygon(0 ${100 - amountOf}%, 100% ${100 - amountOf}%, 100% 100%, 0 100%)`;\n  }\n\n  showIngredientsAvailable(ingredientsAvailable) {\n    const listIngredients = document.getElementsByClassName('information')[0];\n    const itemsIngredient = listIngredients.children;\n    for (const ingName of Object.keys(ingredientsAvailable)) {\n      if (ingredientsAvailable.hasOwnProperty(ingName)) {\n        Array.prototype.forEach.call(itemsIngredient, (item) =>\n          item.dataset.name === ingName ? (item.textContent = `${ingName}: ${ingredientsAvailable[ingName]}`) : '',\n        );\n      }\n    }\n  }\n\n  setupOnMakeCoffeeTypesOnEventClick() {\n    this.buttonElementsNav.addEventListener('click', this.boundHandlerOnSelectedCoffee);\n  }\n\n  removeOnMakeCoffeeTypesOnEventClick() {\n    this.buttonElementsNav.removeEventListener('click', this.boundHandlerOnSelectedCoffee);\n  }\n\n  handlerOnSelectedCoffee(e) {\n    console.clear();\n    if (e.target.type === 'button') {\n      this.startAnimation('busy');\n      this.disableAllButtons(e);\n      this.removeOnMakeCoffeeTypesOnEventClick();\n\n      this.emit('coffeeSelected', e.target.textContent);\n    }\n  }\n\n  disableAllButtons(e) {\n    Array.prototype.forEach.call(e.currentTarget.getElementsByTagName('button'), (button) => (button.disabled = true));\n  }\n\n  enableAllButtons() {\n    Array.prototype.forEach.call(\n      this.buttonElementsNav.getElementsByTagName('button'),\n      (button) => (button.disabled = false),\n    );\n  }\n\n  startAnimation(type) {\n    this.switchOnButton.classList.add(`${type}-mode`);\n  }\n\n  stopAnimation(type) {\n    this.switchOnButton.setAttribute('aria-checked', 'true');\n    this.switchOnButton.classList.remove(`${type}-mode`);\n  }\n\n  startPouringDrinkAnimation(ms, colorCoffee) {\n    this.cup.pouredLiquidElement.style.fill = colorCoffee;\n    this.cup.pouredLiquidElement.classList.add('pouring-mode');\n    this.cup.pouredLiquidElement.style.animationDuration = `${ms}ms`;\n  }\n\n  setupControlsHandlers() {\n    Array.prototype.forEach.call(this.buttonElements, (button) =>\n      button.addEventListener('click', this.audioManager.play.bind(this.audioManager, 'clickButtonsSound')),\n    );\n\n    this.switchOnButton.addEventListener(\n      'click',\n      () => {\n        this.eventHandlers.switchOn.forEach((handler) => handler());\n      },\n      { once: true },\n    );\n    //\n    // document.getElementsByClassName('button-clean-waste')[0]\n    // .addEventListener('click',\n    //   () => this._eventHandlers.cleanUp.forEach((handler) => handler()));\n  }\n\n  setupSwitchOffHandler() {\n    this.switchOnButton.addEventListener(\n      'click',\n      () => {\n        this.eventHandlers.switchOff.forEach((handler) => handler());\n      },\n      { once: true },\n    );\n  }\n\n  showContainerStatus(containerName) {\n    const targetContainer = Array.prototype.find.call(\n      document.getElementsByClassName('container-inner'),\n      (container) => container.dataset.containerName === containerName\n    )\n\n    // в данном случае тоглить !!!! нецелесообразно !!!!\n\n    targetContainer.classList.toggle('error-mode');\n  }\n\n  greeting({coffeeTypes}) {\n    console.log(`\n      Добро пожаловать!\n      Ознакомьтесь, пожалуйста, с нашим меню:\n      ${coffeeTypes.join(', ')}\n      Для выбора напитка просто выберете его в панели навигации.\n      Приятного аппетита!\n    `);\n  }\n\n  showTypesCoffee(coffeeTypes) {\n    if (this.buttonElementsNav.childElementCount === 0) {\n      const coffeeListElement = this.buttonElementsNav;\n\n      coffeeTypes.forEach((coffeeName) => {\n        const buttonElement = document.createElement('button');\n        buttonElement.type = 'button';\n        const listItemElement = document.createElement('li');\n        buttonElement.textContent = coffeeName;\n        listItemElement.appendChild(buttonElement);\n        coffeeListElement.appendChild(listItemElement);\n      });\n    }\n  }\n}\n","import { CoffeeMachine } from './coffee-machine';\n\nexport abstract class CoffeeMachineState {\n  protected coffeeMachine: CoffeeMachine;\n\n  constructor(coffeeMachine: CoffeeMachine) {\n    this.coffeeMachine = coffeeMachine;\n    console.dir(this);\n\n    this.onEnter();\n  }\n\n  abstract turnOn(): void;\n  abstract turnOff(): void;\n\n  onEnter(): void {}\n}\n\nexport class OffCoffeeMachineState extends CoffeeMachineState {\n  onEnter() {\n    this.coffeeMachine.isOn = false;\n  }\n\n  turnOff() {}\n  turnOn() {\n    this.coffeeMachine.setState(StartCoffeeMachineState);\n  }\n}\n\nexport class StartCoffeeMachineState extends CoffeeMachineState {\n  onEnter() {\n    this.coffeeMachine.isOn = true;\n    this.coffeeMachine.emit('welcome', {\n      coffeeTypes: this.coffeeMachine.coffeeTypes\n    });\n    this.coffeeMachine.prepare(2000);\n  }\n\n  turnOff() {}\n  turnOn() {}\n}\n\nexport class PrepareCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {}\n}\n\nexport class CoffeeSelectedCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {}\n}\n\nexport class ReadyCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {\n    this.coffeeMachine.setState(OffCoffeeMachineState);\n  }\n}\nexport class BrewCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {}\n}\n\nexport class WhipMilkCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {}\n}\n\nexport class PourCoffeeCoffeeMachineState extends CoffeeMachineState {\n  turnOn() {}\n  turnOff() {}\n}\n\nexport class InsufficientIngredientsCoffeeMachineState extends CoffeeMachineState {\n  onEnter() {\n    // навещивается два раза!\n    this.coffeeMachine.emit('canOff');\n  }\n\n  turnOn() {}\n  turnOff() {\n    this.coffeeMachine.setState(OffCoffeeMachineState);\n  }\n}\n","export function delay(ms) {\n  return new Promise(\n    (resolve) => setTimeout(resolve, this.isDev ? 10 : ms)\n  );\n}\n","import {\n  BrewCoffeeMachineState,\n  CoffeeMachineState,\n  CoffeeSelectedCoffeeMachineState,\n  InsufficientIngredientsCoffeeMachineState,\n  OffCoffeeMachineState,\n  PourCoffeeCoffeeMachineState,\n  PrepareCoffeeMachineState,\n  ReadyCoffeeMachineState,\n  WhipMilkCoffeeMachineState,\n} from './states';\nimport { Publisher } from './publisher';\nimport { CoffeeType } from './recipe';\nimport { delay } from './utils';\nimport { AbstractCoffeeMachineUI } from './abstract-coffee-machine-ui';\n\ninterface CoffeeMachineParams {\n  dev: boolean;\n  interfaces: AbstractCoffeeMachineUI[];\n  recipes: CoffeeType[];\n}\n\ninterface Ingredients {\n  milk: number;\n  grain: number;\n  water: number;\n}\n\nexport class CoffeeMachine extends Publisher {\n  isOn: boolean;\n  coffeeTypes: string[];\n  ingredientsAvailable: Ingredients;\n\n  private state: CoffeeMachineState;\n  private isDev: boolean;\n  private cupIsFull: boolean;\n  private isClean: boolean;\n  private recipes: CoffeeType[];\n  private wasteAmount: number;\n\n  constructor(config: CoffeeMachineParams) {\n    super();\n    const { dev, interfaces, recipes } = config;\n    this.state = new OffCoffeeMachineState(this);\n    this.isDev = dev;\n    this.isOn = false;\n    this.cupIsFull = false;\n    this.isClean = true;\n    this.recipes = recipes;\n    this.coffeeTypes = this.recipes.map(({ coffeeName }) => coffeeName);\n    this.wasteAmount = 0;\n    this.ingredientsAvailable = { grain: 40, water: 100, milk: 40 };\n\n    interfaces.forEach((machineInterface) => {\n      machineInterface.onEvents({\n        switchOn: () => this.turnOn(),\n        switchOff: () => this.turnOff(),\n        coffeeSelected: (coffeeName) => this.makeCoffee(coffeeName),\n        filledContainer: (container) => {\n          this.ingredientsAvailable[container.containerName] = container.amountOf\n          this.emit('replenishmentOfIngredients',  this.ingredientsAvailable)\n        },\n        filledAllContainers: () => {\n          debugger\n          this.setState(ReadyCoffeeMachineState);\n          this.emit('ready', this.coffeeTypes);\n        }\n      });\n\n      machineInterface.setupEvents(this);\n    });\n\n    this.emit('init', this.ingredientsAvailable)\n  }\n\n  private searchTargetRecipe(coffeeName) {\n    return this.recipes.find((recipe) => recipe.coffeeName === coffeeName);\n  }\n\n  private clean() {\n    this.emit('cleaning');\n\n    if (this.wasteAmount >= 50 && this.wasteAmount <= 100) {\n      this.wasteAmount = 0;\n      this.emit('clear');\n    }\n\n    this.isClean = true;\n  }\n\n  private getLowIngredients(): Partial<Ingredients> {\n    const lowIngredients = {};\n\n    for (const ingredientName of Reflect.ownKeys(this.ingredientsAvailable)) {\n      const ingredientAmount = this.ingredientsAvailable[ingredientName];\n\n      if (ingredientAmount <= 20) {\n        lowIngredients[ingredientName] = ingredientAmount;\n      }\n    }\n\n    return lowIngredients;\n  }\n\n  setState(state) {\n    this.state = new state(this);\n  }\n\n  prepare(delayMs = 2000) {\n    this.setState(PrepareCoffeeMachineState);\n    this.emit('checking', this.cupIsFull);\n\n    delay(delayMs).then(() => {\n      if (!this.isClean) {\n        this.clean();\n      }\n\n      const { milk, grain, water } = this.getLowIngredients();\n\n      if (milk || grain || water) {\n        this.setState(InsufficientIngredientsCoffeeMachineState);\n        this.emit('noAnythingIngredient');\n\n        if (milk) {\n          this.emit('noMilk');\n        }\n\n        if (grain) {\n          this.emit('noGrains');\n        }\n\n        if (water) {\n          this.emit('noWater');\n        }\n\n        return;\n      }\n\n      this.setState(ReadyCoffeeMachineState);\n      this.emit('ready', this.coffeeTypes);\n    });\n  }\n\n  private turnOn() {\n    this.state.turnOn();\n    this.emit('switchedOn');\n  }\n\n  private turnOff() {\n    this.state.turnOff();\n    this.emit('switchedOff');\n  }\n\n  async makeCoffee(coffeeName) {\n    this.setState(CoffeeSelectedCoffeeMachineState);\n    this.emit('checking', this.cupIsFull);\n\n    const coffeeType = this.searchTargetRecipe(coffeeName);\n\n    await this.brewCoffee(coffeeType);\n\n    if (coffeeType.recipe.withMilk) {\n      await this.whipMilk();\n    }\n\n    await this.pourCoffee(coffeeType.color);\n    await this.coffeeReady();\n  }\n\n  private coffeeReady() {\n    this.setState(ReadyCoffeeMachineState);\n    this.emit('returnCoffeeTypes', this.coffeeTypes);\n  }\n\n  private brewCoffee(coffeeType, ms = 4000) {\n    this.setState(BrewCoffeeMachineState);\n    this.emit('brewing', { coffeeType });\n\n    return delay(ms).then(() => {\n      this.consumeIngredients(coffeeType);\n    });\n  }\n\n  private consumeIngredients(coffeeType) {\n    const { waterRequired, grainRequired, milkRequired } = coffeeType.recipe;\n\n    this.ingredientsAvailable.milk -= milkRequired;\n    this.ingredientsAvailable.grain -= grainRequired;\n    this.ingredientsAvailable.water -= waterRequired;\n    this.wasteAmount += grainRequired;\n    this.isClean = false;\n  }\n\n  private pourCoffee(colorCoffee, ms = 2000) {\n    this.setState(PourCoffeeCoffeeMachineState);\n    this.emit('pouring', { colorCoffee, ms });\n\n    return delay(ms).then(() => {\n      this.cupIsFull = true;\n      this.emit('coffeeReady', this.ingredientsAvailable);\n    });\n  }\n\n  private whipMilk(ms = 6000) {\n    this.setState(WhipMilkCoffeeMachineState);\n    return delay(ms).then(() => {\n        this.emit('whipping');\n    });\n  }\n}\n","import { CoffeeMachineGUI } from './coffee-machine-gui';\nimport { CoffeeMachine } from './coffee-machine';\n\nconst myCoffeeMachine = new CoffeeMachine({\n  dev: false,\n  interfaces: [new CoffeeMachineGUI({ hints: false })],\n  recipes: [\n    {\n      coffeeName: 'cappuccino',\n      color: '#CFAA8F',\n      recipe: {\n        withMilk: true,\n        milkRequired: 20,\n        waterRequired: 10,\n        grainRequired: 20,\n      },\n    },\n    {\n      coffeeName: 'raf',\n      color: '#CFA780',\n      recipe: {\n        withMilk: true,\n        milkRequired: 20,\n        waterRequired: 10,\n        grainRequired: 20,\n      },\n    },\n    {\n      coffeeName: 'dark coffee',\n      color: '#4F240A',\n      recipe: {\n        withMilk: false,\n        milkRequired: 0,\n        waterRequired: 10,\n        grainRequired: 20,\n      },\n    },\n  ],\n});\n\nwindow['cm'] = myCoffeeMachine;\n"]}